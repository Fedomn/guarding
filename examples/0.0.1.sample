layer("onion")
    domainModel("")
    domainService("")
    applicationService("")
    adapter("com.phodal.com", "zero");

module::package.len should <= 20;

class::name contains "Controller";

# 类::名 包含 "Controller";

class("..myapp..")::function.name should contains("");
class("..myapp..")::function.name contains("");

class("..myapp..")::function.name should not contains("");
class("..myapp..")::function.name !contains("");

class("..myapp..")::vars.len should <= 20;
class("..myapp..")::function.vars.len should <= 20;

class(implementation "Connection.class")::name should endsWith "Connection";
class(extends "Connection.class")::name endsWith "Connection";
class(assignable "EntityManager.class") resideIn package("..persistence.");

class("com.myapp.(*)..") should freeOfCycles;

# 模型之间的关系
model("..myapp.model..")::relation.len should <= 5;

file("..myapp.(**)") not dependBy "";
file("..service..") only accessed(["..controller..", "..service.."]);
file("..service..")::name contains "Usecase"

package("..home..")::file.len should < 20;
package("..home..") -> file.len should < 20;

# regex
package(matching("^/app"))

class::name.len should < 20;
function::name.len should < 30;


